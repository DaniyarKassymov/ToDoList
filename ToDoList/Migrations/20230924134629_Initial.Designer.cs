// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoList.Database;

#nullable disable

namespace ToDoList.Migrations
{
    [DbContext(typeof(ToDoListDbContext))]
    [Migration("20230924134629_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Models.ToDoTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<DateTime?>("OpenDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PerformerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97ce0cb2-b72c-456f-9a62-bf67bde3550e"),
                            Description = "Написать приложение",
                            PerformerName = "Дамир",
                            Priority = 0,
                            State = 1,
                            Title = "Задача 1"
                        },
                        new
                        {
                            Id = new Guid("d80d8437-8159-430f-a1b5-2bc6288a5955"),
                            Description = "Подготовиться к контрольной",
                            PerformerName = "Дархан",
                            Priority = 0,
                            State = 0,
                            Title = "Задача 2"
                        },
                        new
                        {
                            Id = new Guid("54501933-0582-4b66-8ab6-77cb8a98a83b"),
                            Description = "Установить AD",
                            PerformerName = "Теипжан",
                            Priority = 1,
                            State = 1,
                            Title = "Задача 3"
                        },
                        new
                        {
                            Id = new Guid("9c2d84dd-207a-4b2e-8b4f-c51881a3ea5c"),
                            Description = "Посмотреть вебинар",
                            PerformerName = "Димаш",
                            Priority = 2,
                            State = 1,
                            Title = "Задача 4"
                        },
                        new
                        {
                            Id = new Guid("da6efe5d-d8e5-47b6-a743-899695c5269b"),
                            Description = "Создать БД",
                            PerformerName = "Данияр",
                            Priority = 2,
                            State = 2,
                            Title = "Задача 5"
                        },
                        new
                        {
                            Id = new Guid("5ff23b53-dd21-464b-b869-454b475bcd5b"),
                            Description = "Создать модели",
                            PerformerName = "Адилет",
                            Priority = 1,
                            State = 2,
                            Title = "Задача 6"
                        },
                        new
                        {
                            Id = new Guid("1489fe7d-d9cd-4b16-9d08-245e7cfdbb98"),
                            Description = "Создать контроллер",
                            PerformerName = "Алихан",
                            Priority = 1,
                            State = 0,
                            Title = "Задача 7"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
